<% content_for :header do %>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&v=3&language=ja&libraries=visualization"></script>
<script type="text/javascript">


// アイコンを変更します。
function change_icon(){

  // ajaxで凡例を変更
  document.forms['biru_icon'].s_commit.click();

  // コンボボックスで選択されたものにgooglemapのアイコンを変更
  change_biru_icon($('#biru_icon_id [name=disp_type]').val());

}

// 建物のアイコンを変更します。
function change_biru_icon(type){
  if(type == "siten"){
    // 支店表示
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].siten_icon );
    };
  }else if(type == "area"){
    // エリア表示
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].area_icon );
    };
  } else if(type == "shop" ){
    // 営業所表示
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].shop_icon );
    };

  } else if(type == "biru_kind" ){
    // 建物種別のアイコンにする。
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].build_type_icon );
    };
  } else if( type == "manage_type") {
    // 管理方式のICONを返しますのアイコンにする。
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].manage_icon );
    };
  } else if( type == "num") {
    // 管理戸数のアイコンにする。
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].kanri_room_num );
    };
  } else if( type == "aki") {
    // 空室のアイコンにする。
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].free_room );
    };
  } else if( type == "age") {
    // 築年月のアイコンにする。
    for(var item in build_arr){
      build_arr[item].setIcon(build_arr[item].biru_age );
    };

  } else {
    // 何もしない
  }

}


// 営業所マーカーの表示／非表示
function dips_shops(flg){
  for(var item in shop_arr){
    shop_arr[item].set("visible", flg);
  };
}

// 委託契約マーカーの表示／非表示
function dips_trusts(flg){
  for(var item in trust_arr){
    trust_arr[item].set("visible", flg);
  };
}

// 貸主マーカーの表示／非表示
function dips_owners(flg){
  for(var item in owner_arr){
    owner_arr[item].set("visible", flg);
  };
}


// 営業所の半径１kmのマーカーの表示／非表示
function disp_shop_01(flg){
  for(var item in shop_circle01_arr){
    shop_circle01_arr[item].set("visible", flg);
  };
}

// 営業所の半径２kmのマーカーの表示／非表示
function disp_shop_02(flg){
  for(var item in shop_circle02_arr){
    shop_circle02_arr[item].set("visible", flg);
  };
}


// Infoウィンドウに設定します
function setInfoWnd(marker, msg){
    google.maps.event.addListener(marker, "click", function(){
      infoWnd.setContent(msg);
      infoWnd.open(marker.getMap(), marker);
    });
}

// posからpositionオブジェクトを返します。
function getCoords(position) {
    return new google.maps.LatLng(position.latitude, position.longitude);
}


  function win_result_biru(){
    $( "#result_biru" ).dialog({
		 width: 500
	   , height: 550 
	   , position: {
	       of : window
	      ,at: 'center'
	      ,my: 'left top'
	   }
	 });
  }

  function win_result_owner(){
    $( "#result_owner" ).dialog({ 
		 width: 500
		,height: 450
 	    ,position: {
 	       of : window
 	      ,at: 'center'
 	      ,my: 'left top'
 	   }
	 });
  }

  function win_result_shop(){
    $( "#result_shop" ).dialog({ 
		width: 500
	   ,height: 450
	   ,position: {
	       of : window
	      ,at: 'center'
	      ,my: 'left top'
	   }
    });
  }

  function write_build(biru)
  {
    document.getElementById("m_name").innerText=biru;
  }

  // ズームを変更する maker_kind 1:建物 2:貸主
  function changeZoom(marker_id, maker_kind) {

    var marker;

    if(maker_kind == 1){
      marker = build_arr[marker_id];
    }
    else{
      marker = owner_arr[marker_id];
    }

    mapCanvas.panTo(marker.position);
    mapCanvas.setZoom(18);
  }


  // 営業所
  function get_icon_shop(num){
    var icon;

    if( num == 3 ){
      icon = 'marker_blue.png'; // 草加
    }else if (num == 11 ){
      icon = 'marker_yellow.png'; // 新田
    }else if (num == 16 ){
      icon = 'marker_purple.png'; // 北千住
    }else if (num == 1 ){
      icon = 'marker_red.png'; // 南越谷
    }else if (num == 18 ){
      icon = 'marker_orange.png'; // 越谷
    }else if (num == 8 ){
      icon = 'marker_green.png'; // 北越谷
    }else if (num == 21 ){
      icon = 'marker_white.png'; // せんげん台
    }else if (num == 7 ){
      icon = 'marker_gray.png'; // 春日部
    }else if (num == 2 ){
      icon = 'marker_blue.png'; // 戸田
    }else if (num == 5 ){
      icon = 'marker_yellow.png'; // 武蔵
    }else if (num == 15 ){
      icon = 'marker_purple.png'; // 川口
    }else if (num == 17 ){
      icon = 'marker_red.png'; // 与野
    }else if (num == 13 ){
      icon = 'marker_orange.png'; // 浦和
    }else if (num == 10 ){
      icon = 'marker_green.png'; // 東浦和
    }else if (num == 6 ){
      icon = 'marker_white.png'; // 東川口
    }else if (num == 14 ){
      icon = 'marker_gray.png'; // 戸塚安行
    }else if (num == 19 ){
      icon = 'marker_blue.png'; // 松戸
    }else if (num == 4 ){
      icon = 'marker_yellow.png'; // 北松戸
    }else if (num == 9 ){
      icon = 'marker_purple.png'; // 柏
    }else if (num == 12 ){
      icon = 'marker_red.png'; // 南流山
    }else if (num == 91 ){
      icon = 'marker_purple.png'; // 法人課
    }else {
      icon = 'marker_white.png'; // 不明
    }

    icon = '/assets/' + icon;
    return icon;
  }

  // エリア
  function get_icon_area(num){
    var icon;

    if( num == 3 || num == 11 || num == 16 ){
      icon = 'marker_blue.png'; // 東武南
    }else if (num == 1 || num == 18 ){
      icon = 'marker_yellow.png'; // 東武中央
    }else if (num == 8 || num == 21 || num == 7){
      icon = 'marker_purple.png'; // 東武北
    }else if (num == 2 || num == 5 || num == 15){
      icon = 'marker_red.png'; // さいたま南
    }else if (num == 17 || num == 13  ){
      icon = 'marker_orange.png'; // さいたま北
    }else if (num == 10 || num == 6 || num == 14 ){
      icon = 'marker_green.png'; // さいたま東
    }else if (num == 19 || num == 4 ){
      icon = 'marker_white.png'; // 常磐西
    }else if (num == 9 || num == 12){
      icon = 'marker_gray.png'; // 常磐中央
    }else if (num == 91 ){
      icon = 'marker_green.png'; // 法人課
    }else {
      icon = 'marker_white.png'; // 不明
    }

    icon = '/assets/' + icon;
    return icon;

  }

  // 支店
  function get_icon_siten(num){
    var icon;

    if( num == 3 || num == 11 || num == 16 || num == 1 || num == 18 || num == 8 || num == 21 || num == 7 ){
      icon = 'marker_green.png'; // 東武支店
    }else if (num == 2 || num == 5 || num == 15 || num == 17 || num == 13 || num == 10 || num == 6 || num == 14){
      icon = 'marker_blue.png'; // さいたま支店
    }else if (num == 19 || num == 4 || num == 9 || num == 12){
      icon = 'marker_yellow.png'; // 千葉支店
    }else if (num == 91 ){
      icon = 'marker_purple.png'; // アセットマネジメント部
    }else {
      icon = 'marker_white.png'; // 不明
    }

    icon = '/assets/' + icon;
    return icon;

  }

  // 戸数
  function get_icon_kanri_room_num(num){
    var icon;

    if(num == 1){
      icon ='marker_purple.png';
    }else if( 2 <= num && num <= 4){
        icon = 'marker_blue.png';
    }else if( 5 <= num && num <= 6){
        icon ='marker_green.png';
    }else if( 6 <= num && num <= 8){
        icon ='marker_yellow.png';
    }else if( 8 <= num && num <= 10){
        icon ='marker_orange.png';
    }else if( 11 <= num && num <= 15){
        icon ='marker_red.png';
    }else if( 16 <= num && num <= 20){
        icon ='marker_gray.png';
    }else if( 21 <= num ){
        icon ='marker_gray.png';
    }else{
        icon ='marker_white.png';
    }

    icon = '/assets/' + icon;

    return icon;
  }

  // 空室割合
  function get_icon_free_room(kosuu, aki){
    var flt;
    var icon;
    flt = aki / kosuu;

    if(flt == 0){
        icon = 'marker_blue.png';
    }else if( 0 < flt && flt <= 0.3 ){
        icon ='marker_green.png';
    }else if( 0.3 < flt && flt <= 0.6){
        icon ='marker_orange.png';
    }else if( 0.6 < flt && flt <= 0.9){
        icon ='marker_orange.png';
    }else if( 0.9 < flt && flt <= 1){
        icon ='marker_red.png';
    }else{
        icon ='marker_white.png';
    }

    icon = '/assets/' + icon;

    return icon;

  }

  // 築年数アイコン
  function get_icon_biru_age(age){
    var icon;

    if(0<= age && age <= 1){
        icon ='marker_purple.png';
    }else if( 2 <= age && age <= 5){
        icon = 'marker_blue.png';
    }else if( 6 <= age && age <= 10){
        icon ='marker_green.png';
    }else if( 11 <= age && age <= 20){
        icon ='marker_yellow.png';
    }else if( 21 <= age && age <= 30){
        icon ='marker_orange.png';
    }else if( 31 <= age && age <= 40){
        icon ='marker_red.png';
    }else if( 41 <= age ){
        icon ='marker_gray.png';
    }else{
        icon ='marker_white.png';
    }

    icon = '/assets/' + icon;

    return icon;
  }


  //-------------------
  // グローバル変数定義
  //-------------------
  var convert_shop = [];
  
  function initialize(){
    
    // 初期化処理
    init_process();

    // 初期表示は非表示
    init_display();

    // 地図・ストリートビューを作成します。
    init_map(<%= @biru_user.id %>, <%= @search_bar_disp_flg %>);

    // 初期表示位置を調整
    var bounds = new google.maps.LatLngBounds();

    /* 建物オブジェクトを作成 */
    build_arr = {}; // グローバル
    kyori_text = ""
    var pos;
    var idx = 0;
    var biru_latlngs = [];
    var populations = [];

    var building_to_owners = gon.building_to_owners
	
    gon.buildings.forEach(function(building){
        pos = new google.maps.LatLng(building.latitude, building.longitude);

        <% if @search_type == 2 # 貸主の時、初期状態で非表示%>
          var build_disp = false
        <% else %>
          var build_disp = true
          bounds.extend(pos);
        <% end %>

        var shop_code = convert_shop[building.shop_id];

        build_arr[building.id] = createMarker({
          position : pos
          ,map : mapCanvas
          ,icon : building.tmp_build_type_icon
          ,siten_icon : get_icon_siten(shop_code)
          ,area_icon : get_icon_area(shop_code)
          ,shop_icon : get_icon_shop(shop_code)
          ,manage_icon : building.tmp_manage_type_icon
          ,build_type_icon : building.tmp_build_type_icon
          ,kanri_room_num  : get_icon_kanri_room_num(building.kanri_room_num)
          ,free_room : get_icon_free_room(building.kanri_room_num, building.free_num)
          ,biru_age : get_icon_biru_age(building.biru_age)
          ,shadow : '/assets/marker_shadow.png'
          ,html : info_msg_biru(building, building_to_owners[building.id])
          ,visible : build_disp
        });

        /* 距離を測る */
        /*
        var origins = [];
        origins.push(pos)
        var request = {
           origins : origins
          ,destinations : distination_arr
          ,travelMode : google.maps.TravelMode.WALKING
        };

        var distanceMatrix = new google.maps.DistanceMatrixService();
        var x, ele;
        distanceMatrix.getDistanceMatrix(request, function(result, status){
          kyori_text = '<%#= biru.name %>' + "<hr>";
          for(x=0; x<distination_arr.length; x++){
            ele = result.rows[0].elements[x];
            kyori_text += distination.getAt(x).name + "まで" + ele.distance.text + "(" + ele.duration.text + ")<br>";
          }

          setInfoWnd(build_arr[<%#= biru.id %>], kyori_text);

        });
        */

        /* 戸数別のヒートマップを作る為のオブジェクト */
        populations.push({
          location : pos
          ,weight : buildings[i].room_num
        })

        biru_latlngs[idx] = pos;
        idx = idx + 1;
    });

    var heatmap_biru = new google.maps.visualization.HeatmapLayer();
    heatmap_biru.setData(biru_latlngs);

    var heatmap_room = new google.maps.visualization.HeatmapLayer();
    heatmap_room.setData(populations);

//    /* ヒートマップイベント登録 */
//    var hiatmap00Radio = document.getElementById("hiatmap00Radio");
//    google.maps.event.addDomListener(hiatmap00Radio, "click", function(){
//      heatmap_biru.setMap(null);
//      heatmap_room.setMap(null);
//    });

//    var hiatmap01Radio = document.getElementById("hiatmap01Radio");
//    google.maps.event.addDomListener(hiatmap01Radio, "click", function(){
//      heatmap_biru.setMap(mapCanvas);
//      heatmap_room.setMap(null);
//    });

//    var hiatmap02Radio = document.getElementById("hiatmap02Radio");
//    google.maps.event.addDomListener(hiatmap02Radio, "click", function(){
//      heatmap_biru.setMap(null);
//      heatmap_room.setMap(mapCanvas);
//    });

    /* 貸主オブジェクトを作成 */
    owner_arr = {}; // varを外してグローバル化
    var owner_to_buildings = gon.owner_to_buildings
    var owner_icon;
    var owner_disp;
	
    gon.owners.forEach(function(owner){
      pos = new google.maps.LatLng(owner.latitude, owner.longitude);

      <% if @search_type == 1 # 建物検索の時、初期状態で非表示%>
        owner_disp = false
      <% else %>
        owner_disp = true
        bounds.extend(pos);
      <% end %>

      // 貸主かどうかでアタックを決める。
      if( owner.code == null){
        owner_icon = "https://chart.googleapis.com/chart?chst=d_map_pin_icon&chld=home%7C0033FF"
      } else {
        owner_icon = "https://chart.googleapis.com/chart?chst=d_map_pin_icon&chld=home%7CFFFF00"
      }

      owner_arr[owner.id] = createMarker({
        position : pos
        ,map : mapCanvas
        ,icon : owner_icon
        ,html : info_msg_owner(owner, owner_to_buildings[owner.id])
        ,visible : owner_disp
      });
	});

    /* 委託契約CDのラインを引く */
    trust_arr = {}; // varを外してグローバル化
	gon.trusts.forEach(function(trust){

      // 貸主マスタ・建物マスタに委託で指定した貸主CD・建物CDが存在することを確認
      if ( !owner_arr[trust.owner_id] ){
          //continue;
		  return;
      }

      if ( !build_arr[trust.building_id]){
          //continue;
		  return;
      }

      trust_arr[trust.id] = new google.maps.Polyline({
         map : mapCanvas
        ,path : [owner_arr[trust.owner_id].position, build_arr[trust.building_id].position]
        ,strokeColor: gon.manage_line_color[trust.manage_type_id]
        ,strokeOpacity:0.5
        ,strokeWeight:3
        ,zIndex:1
      });

      // 初期状態は非表示
      trust_arr[trust.id].set("visible", false);

      // ダブルクリック時のイベント登録
      trust_ev = trust_arr[trust.id]
      owner_ev = owner_arr[trust.owner_id]
      build_ev = build_arr[trust.building_id]

      // クリックした時のオブジェクトを保存するために、イベントは関数呼び出しで登録する。
      create_relation_listener(trust_ev, owner_ev, build_ev)
	});

    /* 営業所の情報を表示する */
    shop_arr = {}; // varを消してグローバル化
    shop_circle01_arr = {}; // varを消してグローバル化
    shop_circle02_arr = {}; // varを消してグローバル化
    var distination = new google.maps.MVCArray();
    var distination_arr = [];

    gon.shops.forEach(function(shop){

      pos = new google.maps.LatLng(shop.latitude, shop.longitude);
      bounds.extend(pos);

      shop_arr[shop.id] = createMarker({
        position : pos
        ,map : mapCanvas
        ,animation: google.maps.Animation.DROP
        ,icon : shop.icon
        ,info_msg : shop.name
        ,html : info_msg_shop(shop)
      });

      /* 営業所の円を作成 */
      shop_circle01_arr[shop.id] = create_circle(1000, mapCanvas, pos);
      shop_circle02_arr[shop.id] = create_circle(2000, mapCanvas, pos);

      /* 距離を測る対象を設定 */
      distination.push({name:shop.name, latLng:[shop.latitude, shop.longitude]});
      distination_arr.push(pos);
	});

    mapCanvas.fitBounds(bounds);

//    /* すべての委託契約の表示をON または OFF にする。 */
//    var trustChkbox = document.getElementById("trustChkbox");
//    google.maps.event.addDomListener(trustChkbox, "click", function(){
//        // console.log(trust_arr);
//        for(var item in trust_arr){
//          trust_arr[item].set("visible", trustChkbox.checked);
//        };
//    });

//    /* すべての貸主を表示・非表示にする */
//    var ownerChkbox = document.getElementById("ownerChkbox");
//    google.maps.event.addDomListener(ownerChkbox, "click", function(){
//        for(var item in owner_arr){
//          owner_arr[item].set("visible", ownerChkbox.checked);
//        };
//    });

//    /* すべての営業所を表示・非表示にする */
//    var storeChkbox = document.getElementById("storeChkbox");
//    google.maps.event.addDomListener(storeChkbox, "click", function(){
//        // console.log(trust_arr);
//        for(var item in shop_arr){
//          shop_arr[item].set("visible", storeChkbox.checked);
//        };
//    });

//   /* 営業所の範囲サークルの表示１ */
//    var circle01Check = document.getElementById("circle01Check");
//    google.maps.event.addDomListener(circle01Check, "click", function(){
//      for(var item in shop_circle01_arr){
//        shop_circle01_arr[item].set("visible", circle01Check.checked);
//      };
//    });

//    /* 営業所の範囲サークルの表示２ */
//    var circle02Check = document.getElementById("circle02Check");
//    google.maps.event.addDomListener(circle02Check, "click", function(){
//      for(var item in shop_circle02_arr){
//        shop_circle02_arr[item].set("visible", circle02Check.checked);
//      };
//    });


  } // end initialize

  google.maps.event.addDomListener(window, "load", initialize);


</script>

  <style type="text/css">
    html, body{
      margin: 0;
      padding: 0;
      width: 100%;
      height: 100%;
    }

    #map_canvas{
      position: fixed;
      width:100%;
      height:100%;
      top:0px;
      left:0;
    }

    #top-menu{
      padding:0;
      margin:0;
    }
	
	a{
	  text-decoration:underline;	
	}
	
  </style>

<% end %>

<% content_for :sidebar_map do %>

  <!-- ここは span3で呼び出されている -->
  <div style="padding-left:0px;width:300px;">

    <div id="myTabContent_search" class="tab-content">

      <!-- 検索条件設定 -->
      <div class="tab-pane fade active in" id="tab_search" style="padding:0;margin:0">
        <ul class="nav nav-tabs">
          <li class="active"><a href="#tab1" data-toggle="tab" style="padding-top:10px;padding-bottom:10px;width:90px;text-align: center;">建物検索</a></li>
          <li><a href="#tab2" data-toggle="tab" style="padding-top:10px;padding-bottom:10px;width:90px;text-align: center;">貸主検索</a></li>
          <li><a href="#tab3" data-toggle="tab" style="padding-top:10px;padding-bottom:10px;width:105px;text-align: center;">コード一括</a></li>
        </ul>

        <div id="myTabContent1" class="tab-content">
          <div class="tab-pane fade active in" id="tab1">
             <%= render :partial=>'search_build' %>
          </div>
          <div class="tab-pane fade" id="tab2" >
             <%= render :partial=>'search_owner' %>
          </div>
          <div class="tab-pane fade" id="tab3" >
             <%= render :partial=>'search_bulk' %>
          </div>
        </div>
      </div>
	  
	  
      <!-- 検索結果確認 -->
      <div class="tab-pane fade " id="tab_result" >
        <ul class="nav nav-tabs">
          <!--
          <li class="active"><a href="#tab7" data-toggle="tab" style="width:65px;text-align: center;">表示設定</a></li>
          -->
          <li class="active"><a href="#tab6" data-toggle="tab" style="width:45px;text-align: center;">営業所</a></li>
          <li><a href="#tab4" data-toggle="tab" style="width:40px;text-align: center;">建物</a></li>
          <li><a href="#tab5" data-toggle="tab" style="width:40px;text-align: center;">貸主</a></li>
        </ul>

        <div id="myTabContent2" class="tab-content" style="padding-left:10px;">
          <div class="tab-pane fade" id="tab4">
            <div id="result_biru" title="建物検索結果">
             <%= render :partial=>'result_buildings' %>
            </div>
          </div>
          <div class="tab-pane fade" id="tab5">
            <div id="result_owner" title="貸主検索結果">
              <%= render :partial=>'result_owners' %>
            </div>
          </div>
          <div class="tab-pane active in fade" id="tab6">
            <div id="result_shop" title="営業所検索結果">
              <%= render :partial=>'result_shops' %>
            </div>
          </div>
          <!--
          <div class="tab-pane active in fade" id="tab7" style="padding-left:10px;">
             <%#= render :partial=>'disp' %>
          </div>
          -->
        </div>

      </div>

    </div>
	
  </div>

<script type="text/javascript">
$(document).ready(function() {
  $('#simple-menu').sidr({
    side: 'right'
  });
  
  // $('#map_canvas').Jcrop();
});
</script>
<% end %>


  <!-- ここは span9で呼び出されているので合計も9に合わせる -->
  <!--
<div class="span12" style="float:left;padding-left:10px;">
  -->
  <a id="simple-menu" href="#sidr"></a>
  <!--
  <div style="border-width : 3px;border-style : solid;border-color : silver;">
  -->
    <div id="map_canvas" style="width: 100%;height:100%;"></div>
    <div id="panowide" style="width: 100%; height: 0px;margin-top: 5px;">
      <!--
       <input type="button" value="閉じる" onclick="sv_init();" style="top: 10px;right: 20px;position:absolute;z-index: 500;" />
      -->
    </div>
    <!--
  </div>
    -->
    <!--
</div>
  -->



